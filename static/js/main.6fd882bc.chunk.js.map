{"version":3,"sources":["function.js","page-componentss/toolbox.js","savednotes.js","newnote.js","inputNote.js","page-componentss/header.js","index.js"],"names":["GetNotes","props","NotesList","JSONnotes","map","item","id_num","id","title","my_notes","note","searchText","toLowerCase","key","className","onClick","event","deleteMe","editNote","indexOf","Toolbox","type","onChange","this","searchNotes","placeholder","clearSearchbox","Component","RenderNotes","state","deletedOne","index","splice","setState","target","value","document","getElementById","console","log","editMe","NewNote","userinput","titleInput","status","titleInputChange","userInputChangeHandler","saveNote","length","i","push","j","clearNote","updateNotes","align","InputNote","Header","OpenSidebar","App","JSON","deleteAll","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.6fd882bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../src/css/style.css';\r\n\r\n\r\nconst GetNotes = (props) => { \r\n      \r\n       const NotesList = props.JSONnotes.map((item)=>{\r\n            var id_num = item.id;\r\n            var title = item.title;\r\n            var my_notes = item.note;\r\n            var searchText = props.searchText.toLowerCase()\r\n            if(searchText === '' ){\r\n                  // If Searc Box is empty\r\n                 \r\n                         return( <div key = {id_num} className = \"cardSmall\">                     \r\n                  \r\n                       <div className=\"noteName\">{title}\r\n                       <i onClick = {(event) => props.deleteMe(id_num,title,my_notes)}className=\"fas fa-trash\"></i>\r\n                        <i onClick = {(event) => props.editNote(id_num ,title , my_notes)}className=\"fas fa-edit\"></i>\r\n                        \r\n                        </div>\r\n                       \r\n\r\n                        <div className = \"savedNotes\" id=\"style-10\" >{my_notes}</div>\r\n\r\n                       </div> )\r\n\r\n            } else if (searchText !== ''){ // if searchbox is not empty \r\n                  //then if title contains search text or note contains search text then\r\n                  if(title.toLowerCase().indexOf(searchText) !== -1 || my_notes.toLowerCase().indexOf(searchText) !== -1){\r\n                              return (\r\n                                    <div key = {id_num} className = \"cardSmall\">                     \r\n                  \r\n                                           <div className=\"noteName\">{title}\r\n                                                  <i onClick = {(event) => props.deleteMe(id_num,title,my_notes)}className=\"fas fa-trash\"></i>\r\n                                                  <i onClick = {(event) => props.editNote(id_num ,title , my_notes)}className=\"fas fa-edit\"></i>\r\n\r\n                                           </div>\r\n                       \r\n\r\n                                            <div className = \"savedNotes\" id=\"style-10\" >{my_notes}</div>\r\n\r\n                                    </div>\r\n                              )\r\n\r\n                              }\r\n\r\n                        }\r\n\r\n         \r\n               })\r\n\r\n\r\n\r\n         return <div className =\"container\" >\r\n            {NotesList}\r\n         </div>\r\n       }\r\n\r\n\r\n   export default GetNotes;\r\n\r\n   ","import React, { Component } from 'react';\nimport '../css/toolbox.css';\n\n\nclass Toolbox extends Component{\n    \n\n\n\n    render(){\n        return(\n            <div className=\"toolbox\">\n                 <ul>\n                      <li><textarea  id=\"searchBox\" type=\"text\" onChange = {this.props.searchNotes} placeholder=\"Type Something to Search\"></textarea></li>\n                      \n                      <li  onClick={this.props.clearSearchbox}> <i className=\"fas fa-times\" > </i> </li>\n                 </ul>\n               \n            </div>\n        )\n    }\n}\n\nexport default Toolbox;","import React, { Component } from 'react'\r\nimport '../src/css/style.css'\r\n// import JSON from './notes.json'\r\nimport GetNotes from './function'\r\nimport Toolbox from './page-componentss/toolbox';\r\n\r\nclass RenderNotes extends Component{\r\nstate = {\r\n    deletedOne:0,\r\n    searchText : ''\r\n    \r\n}\r\n\r\n\r\n\r\n\r\ndeleteMe = (id,title,note) => {\r\n    this.props.JSONnotes.map((item,index) => {\r\n        if(item.id === id && item.title === title && item.note === note){\r\n            this.props.JSONnotes.splice(index,1)\r\n        };\r\n        return this.setState({\r\n            deletedOne:index\r\n        })\r\n    })\r\n}\r\n\r\n// Handler for Search bOX\r\n\r\nsearchNotes = (event) => {\r\n\r\n   this.setState({\r\n       searchText:event.target.value\r\n   })\r\n}\r\n    \r\n\r\nclearSearchbox = () => {\r\n\r\n    document.getElementById(\"searchBox\").value = \"\"\r\n    this.setState({\r\n        searchText:'',\r\n    })\r\n    console.log(this.state.searchText)\r\n}\r\n\r\n    \r\n    render(){\r\n        return (          \r\n        <div>\r\n                <Toolbox clearSearchbox = {this.clearSearchbox}searchNotes = {this.searchNotes}{...this.props}/>\r\n                <GetNotes \r\n            editMe = {this.editMe} \r\n            deleteMe = {this.deleteMe} \r\n            searchText = {this.state.searchText}\r\n            {...this.props}/>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default RenderNotes;\r\n","import React, { Component } from 'react';\nimport RenderNotes from './savednotes';\n\nclass NewNote extends Component{\n    state = {\n        userinput:'',\n        titleInput:'',\n        status:'writing',\n     }\n     \n\n     // Title Change Event Handler\n     titleInputChange = (event) => {\n        this.setState({titleInput:event.target.value})\n     }\n\n     // Notes Typed Change handler\n     userInputChangeHandler = (event) => {\n        this.setState({userinput:event.target.value});\n     }\n   \n     // Save Button onClick Function\n\n     saveNote = () => { if (this.state.userinput !==''){\n         var length =\n         this.props.JSONnotes.length \n         var i = length + 1\n         this.props.JSONnotes.push( \n            { id : i,\n             title : this.state.titleInput,\n              note: this.state.userinput \n            } \n            ) \n            for (var j = 0;j <= length;j++) {\n               this.setState({\n                  userinput:'',\n                  titleInput:'',\n                  status:j }) \n            }\n           \n             this.clearNote() \n             this.updateNotes() } }\n     \n    // Clear Button onClick Function call\n     clearNote = () => {\n        document.getElementById('titleInputBox').value = '';\n        document.getElementById('userInputBox').value = '';\n     }\n     // Update JSON object as String\n     updateNotes = () => {\n      //   var finalJSON = JSON.stringify(this.props.JSONnotes);\n      //  console.log(this.props.JSONnotes);\n     }\n\n\n     // Edit note State Change\n     editNote = (id,title,note) => {\n      \n      document.getElementById('titleInputBox').value = `${note}`\n      document.getElementById('userInputBox').value = `${title}`;\n\n      this.setState({\n         userinput:`${title}`,\n         titleInput:`${note}`\n     })\n   }\n     \n     render(){\n         \n        return(\n            <div>\n                    <div className='card'>\n                            <div className = \"btn-Small\" onClick={this.clearNote}> + </div>\n                             <p className=\"heading-1\">Title</p>\n                            <textarea type=\"text\" id=\"titleInputBox\" onChange = {this.titleInputChange} className = \"titlebox\" placeholder = \"Give me a Name\"></textarea>\n            \n                            <p className=\"heading-2\">enWrite Here</p>\n                             <textarea type=\"text\" id=\"userInputBox\"onChange = {this.userInputChangeHandler} className =\"inputBox\" placeholder=\"What's On Your Mind\"></textarea>\n                         <div>\n                            <button className=\"button\" align=\"center\" onClick={this.saveNote}>Save</button>\n                             <button className='button' onClick={this.clearNote}>Clear</button>\n                         </div>\n                    </div>\n                    <br/>\n                    \n                     <RenderNotes \n                     editNote = {this.editNote}\n                     userinput = {this.state.userinput}\n                     JSONnotes={this.props.JSONnotes}\n                     {...this.props}/>\n                    \n            </div>\n        )\n     }\n    \n};\n\nexport default NewNote;","import React, { Component } from 'react';\r\nimport '../src/css/style.css'\r\n//import JSON from './notes.json'\r\n\r\nimport NewNote from './newnote'\r\n\r\n\r\nclass InputNote extends Component{\r\n\r\n\r\n   render(){\r\n      return (   \r\n         <div>\r\n            <NewNote {...this.props}/>        \r\n        </div> \r\n      )\r\n }\r\n}\r\n\r\nexport default InputNote;\r\n","import React, { Component } from 'react'\r\nimport '../css/header.css'\r\n\r\n\r\nclass Header extends Component{\r\n\r\n\r\n   render(){\r\n      return(\r\n         <div>\r\n                  <div className=\"navbar\">\r\n    \r\n                   <i className=\"fas fa-bars\" onClick={this.OpenSidebar}></i>\r\n                    <h1 className=\"main-title\" >enwrite</h1>\r\n\r\n                  <ul>\r\n                      <li><i className=\"fas fa-search\"></i></li>\r\n                      <li><i className=\"fas fa-user\"></i></li>\r\n                 </ul>\r\n\r\n            </div>\r\n         </div>\r\n  \r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport JSON from './notes.json'\r\n\r\n\r\n//Components\r\nimport InputNotes from './inputNote'\r\n\r\nimport Header from './page-componentss/header';\r\n\r\n\r\nclass App extends Component {\r\n   state = {\r\n      JSONnotes : JSON\r\n   }\r\n\r\n// deletes All notes in the Array \r\n//Unused for now\r\n   // deleteAll = () => {\r\n   //       this.setState({\r\n   //          JSONnotes:[]\r\n   //       })\r\n   // }\r\n     \r\n   \r\n  \r\n   render(){\r\n      return (\r\n         <div>\r\n            <Header/>\r\n            <InputNotes deleteAll = {this.deleteAll} JSONnotes={this.state.JSONnotes}/>\r\n         </div>\r\n         \r\n      )\r\n   }\r\n   }\r\n\r\n\r\n\r\nReactDOM.render(<App/>,document.querySelector('#root'))"],"sourceRoot":""}