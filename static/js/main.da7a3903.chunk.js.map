{"version":3,"sources":["page-componentss/sidebar.js","function.js","page-componentss/toolbox.js","savednotes.js","newnote.js","inputNote.js","page-componentss/header.js","index.js"],"names":["Sidebar","props","boxWidth","boxDisplay","sidebar","style","width","className","onClick","event","sidebarUpdate","display","GetNotes","NotesList","JSONnotes","map","item","id_num","id","title","my_notes","note","searchText","toLowerCase","key","deleteMe","editNote","indexOf","Toolbox","type","onChange","this","searchNotes","placeholder","clearSearchbox","Component","RenderNotes","state","deletedOne","index","splice","setState","target","value","document","getElementById","console","log","editMe","NewNote","userinput","titleInput","status","titleInputChange","userInputChangeHandler","saveNote","length","i","push","j","clearNote","updateNotes","align","InputNote","Header","openSidebar","App","JSON","deleteAll","ReactDOM","render","querySelector"],"mappings":"u7GAiCeA,G,MA9BC,SAACC,GAKb,IAAIC,EAAW,MACXC,EAAa,OAUjB,MARqB,WAAlBF,EAAMG,SACNF,EAAW,QACXC,EAAa,SACa,WAAlBF,EAAMG,UACbF,EAAW,MACZC,EAAa,QAIZ,6BACQ,yBAAME,MAAS,CAACC,MAAMJ,GAAUK,UAAW,oBAC3C,uBAAGC,QAAW,SAACC,GAAD,OAAWR,EAAMS,cAAc,WAAUH,UAAU,gBAAjE,MAIA,yBAAKF,MAAS,CAACM,QAAQR,GAAYI,UAAY,aAAaC,QAAW,SAACC,GAAD,OAAWR,EAAMS,cAAc,gBCoCpGE,G,KA1DD,SAACX,GAEX,IAAMY,EAAYZ,EAAMa,UAAUC,KAAI,SAACC,GAGlC,IAAIC,EAASD,EAAKE,GACdC,EAAQH,EAAKG,MACbC,EAAWJ,EAAKK,KAChBC,EAAarB,EAAMqB,WAAWC,cAClC,MAAkB,KAAfD,EAGkB,yBAAKE,IAAOP,EAAQV,UAAY,aAE1C,yBAAKA,UAAU,YAAYY,EAC3B,uBAAGX,QAAW,SAACC,GAAD,OAAWR,EAAMwB,SAASR,EAAOE,EAAMC,IAAUb,UAAU,iBACxE,uBAAGC,QAAW,SAACC,GAAD,OAAWR,EAAMyB,SAAST,EAAQE,EAAQC,IAAUb,UAAU,iBAK5E,yBAAKA,UAAY,aAAaW,GAAG,YAAaE,IAIhC,KAAfE,IAE2C,IAA7CH,EAAMI,cAAcI,QAAQL,KAAsE,IAAhDF,EAASG,cAAcI,QAAQL,QAFnF,EAIiB,yBAAKE,IAAOP,EAAQV,UAAY,aAEzB,yBAAKA,UAAU,YAAYY,EACpB,uBAAGX,QAAW,SAACC,GAAD,OAAWR,EAAMwB,SAASR,EAAOE,EAAMC,IAAUb,UAAU,iBACzE,uBAAGC,QAAW,SAACC,GAAD,OAAWR,EAAMyB,SAAST,EAAQE,EAAQC,IAAUb,UAAU,iBAKlF,yBAAKA,UAAY,aAAaW,GAAG,YAAaE,OAcjF,OAAO,yBAAKb,UAAW,aACnBM,KClCEe,G,6KAbP,OACI,yBAAKrB,UAAU,WACV,4BACK,4BAAI,8BAAWW,GAAG,YAAYW,KAAK,OAAOC,SAAYC,KAAK9B,MAAM+B,YAAaC,YAAY,8BAE1F,wBAAKzB,QAASuB,KAAK9B,MAAMiC,gBAAzB,IAA0C,uBAAG3B,UAAU,gBAAb,KAA1C,W,GAXA4B,cC0DPC,E,4MAvDfC,MAAQ,CACJC,WAAW,EACXhB,WAAa,I,EAOjBG,SAAW,SAACP,EAAGC,EAAME,GACjB,EAAKpB,MAAMa,UAAUC,KAAI,SAACC,EAAKuB,GAI3B,OAHGvB,EAAKE,KAAOA,GAAMF,EAAKG,QAAUA,GAASH,EAAKK,OAASA,GACvD,EAAKpB,MAAMa,UAAU0B,OAAOD,EAAM,GAE/B,EAAKE,SAAS,CACjBH,WAAWC,Q,EAOvBP,YAAc,SAACvB,GAEZ,EAAKgC,SAAS,CACVnB,WAAWb,EAAMiC,OAAOC,S,EAK/BT,eAAiB,WAEbU,SAASC,eAAe,aAAaF,MAAQ,GAC7C,EAAKF,SAAS,CACVnB,WAAW,KAEfwB,QAAQC,IAAI,EAAKV,MAAMf,a,uDAKnB,OACA,6BACQ,kBAAC,EAAD,eAASY,eAAkBH,KAAKG,eAAeF,YAAeD,KAAKC,aAAgBD,KAAK9B,QACxF,kBAAC,EAAD,eACJ+C,OAAUjB,KAAKiB,OACfvB,SAAYM,KAAKN,SACjBH,WAAcS,KAAKM,MAAMf,YACrBS,KAAK9B,a,GAjDKkC,aC2FXc,E,4MA7FXZ,MAAQ,CACJa,UAAU,GACVC,WAAW,GACXC,OAAO,W,EAKVC,iBAAmB,SAAC5C,GACjB,EAAKgC,SAAS,CAACU,WAAW1C,EAAMiC,OAAOC,S,EAI1CW,uBAAyB,SAAC7C,GACvB,EAAKgC,SAAS,CAACS,UAAUzC,EAAMiC,OAAOC,S,EAKzCY,SAAW,WAAQ,GAA4B,KAAxB,EAAKlB,MAAMa,UAAgB,CAC9C,IAAIM,EACJ,EAAKvD,MAAMa,UAAU0C,OACjBC,EAAID,EAAS,EACjB,EAAKvD,MAAMa,UAAU4C,KAClB,CAAExC,GAAKuC,EACNtC,MAAQ,EAAKkB,MAAMc,WAClB9B,KAAM,EAAKgB,MAAMa,YAGnB,IAAK,IAAIS,EAAI,EAAEA,GAAKH,EAAOG,IACxB,EAAKlB,SAAS,CACXS,UAAU,GACVC,WAAW,GACXC,OAAOO,IAGZ,EAAKC,YACL,EAAKC,gB,EAGbD,UAAY,WACThB,SAASC,eAAe,iBAAiBF,MAAQ,GACjDC,SAASC,eAAe,gBAAgBF,MAAQ,I,EAGnDkB,YAAc,a,EAOdnC,SAAW,SAACR,EAAGC,EAAME,GAEpBuB,SAASC,eAAe,iBAAiBF,MAAzC,UAAoDxB,GACpDyB,SAASC,eAAe,gBAAgBF,MAAxC,UAAmDtB,GAEnD,EAAKoB,SAAS,CACXS,UAAU,GAAD,OAAI/B,GACbgC,WAAW,GAAD,OAAI9B,M,uDAMf,OACI,6BACQ,yBAAKd,UAAU,QACP,yBAAKA,UAAY,YAAYC,QAASuB,KAAK6B,WAA3C,OACC,uBAAGrD,UAAU,aAAb,SACD,8BAAUsB,KAAK,OAAOX,GAAG,gBAAgBY,SAAYC,KAAKsB,iBAAkB9C,UAAY,WAAW0B,YAAc,mBAEjH,uBAAG1B,UAAU,aAAb,gBACC,8BAAUsB,KAAK,OAAOX,GAAG,eAAcY,SAAYC,KAAKuB,uBAAwB/C,UAAW,WAAW0B,YAAY,wBACtH,6BACG,4BAAQ1B,UAAU,SAASuD,MAAM,SAAStD,QAASuB,KAAKwB,UAAxD,QACC,4BAAQhD,UAAU,SAASC,QAASuB,KAAK6B,WAAzC,WAGT,6BAEC,kBAAC,EAAD,eACAlC,SAAYK,KAAKL,SACjBwB,UAAanB,KAAKM,MAAMa,UACxBpC,UAAWiB,KAAK9B,MAAMa,WAClBiB,KAAK9B,a,GAtFRkC,aCgBP4B,E,uKART,OACG,6BACG,kBAAC,EAAYhC,KAAK9B,Y,GANNkC,aC8BT6B,G,kNA/BZC,YAAc,WACX,MAA2B,WAAvB,EAAKhE,MAAMG,QACJ,EAAKH,MAAMS,cAAc,UAGF,WAAvB,EAAKT,MAAMG,QACZ,EAAKH,MAAMS,cAAc,eAD5B,G,uDAMP,OACG,6BACS,yBAAKH,UAAU,UAEd,uBAAGA,UAAU,cAAcC,QAAWuB,KAAKkC,cAC1C,wBAAI1D,UAAU,cAAd,WAEF,4BACI,4BAAI,uBAAGA,UAAU,mBACjB,4BAAI,uBAAGA,UAAU,wB,GAtBlB4B,cCMf+B,E,4MACH7B,MAAQ,CACLvB,UAAYqD,EACZ/D,QAAQ,U,EAWXM,cAAgB,SAACiC,GACd,EAAKF,SAAS,CACXrC,QAAQuC,K,uDAOX,OACG,6BACG,kBAAC,EAAD,CAAQvC,QAAW2B,KAAKM,MAAMjC,QAASM,cAAiBqB,KAAKrB,gBAC7D,kBAAC,EAAD,CAASN,QAAW2B,KAAKM,MAAMjC,QAASM,cAAiBqB,KAAKrB,gBAC9D,kBAAC,EAAD,CAAY0D,UAAarC,KAAKqC,UAAWtD,UAAWiB,KAAKM,MAAMvB,iB,GA3BzDqB,aAoClBkC,IAASC,OAAO,kBAAC,EAAD,MAAO1B,SAAS2B,cAAc,Y","file":"static/js/main.da7a3903.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/sidebar.css'\n\nconst Sidebar = (props) => {\n\n    // const closeSidebar = () =>{\n    //     props.sidebarUpdate('closed')\n    // }\n    var boxWidth = '0px'\n    var boxDisplay = 'none'\n\n    if(props.sidebar === 'opened'){\n       boxWidth = '300px'\n       boxDisplay = 'block'\n    } else if (props.sidebar === 'closed'){\n        boxWidth = '0px'\n       boxDisplay = 'none'\n    }\n\n    return (\n        <div>\n                <div  style = {{width:boxWidth}}className= 'sidebarContainer' >\n                <i onClick = {(event) => props.sidebarUpdate('closed')}className=\"fas fa-times\" > </i>\n            \n                </div>\n\n                <div style = {{display:boxDisplay}}className = 'fullscreen' onClick = {(event) => props.sidebarUpdate('closed')}></div>\n\n            </div>\n    )\n}\n\n\nexport default Sidebar;","import React from 'react';\r\nimport '../src/css/style.css';\r\n\r\n\r\nconst GetNotes = (props) => { \r\n      \r\n       const NotesList = props.JSONnotes.map((item)=>{\r\n\r\n            \r\n            var id_num = item.id;\r\n            var title = item.title;\r\n            var my_notes = item.note;\r\n            var searchText = props.searchText.toLowerCase()\r\n            if(searchText === '' ){\r\n                  // If Searc Box is empty\r\n                 \r\n                         return( <div key = {id_num} className = \"cardSmall\">                     \r\n                  \r\n                       <div className=\"noteName\">{title}\r\n                       <i onClick = {(event) => props.deleteMe(id_num,title,my_notes)}className=\"fas fa-trash\"></i>\r\n                        <i onClick = {(event) => props.editNote(id_num ,title , my_notes)}className=\"fas fa-edit\"></i>\r\n                        \r\n                        </div>\r\n                       \r\n\r\n                        <div className = \"savedNotes\" id=\"style-10\" >{my_notes}</div>\r\n\r\n                       </div> )\r\n\r\n            } else if (searchText !== ''){ // if searchbox is not empty \r\n                  //then if title contains search text or note contains search text then\r\n                  if(title.toLowerCase().indexOf(searchText) !== -1 || my_notes.toLowerCase().indexOf(searchText) !== -1){\r\n                              return (\r\n                                    <div key = {id_num} className = \"cardSmall\">                     \r\n                  \r\n                                           <div className=\"noteName\">{title}\r\n                                                  <i onClick = {(event) => props.deleteMe(id_num,title,my_notes)}className=\"fas fa-trash\"></i>\r\n                                                  <i onClick = {(event) => props.editNote(id_num ,title , my_notes)}className=\"fas fa-edit\"></i>\r\n\r\n                                           </div>\r\n                       \r\n\r\n                                            <div className = \"savedNotes\" id=\"style-10\" >{my_notes}</div>\r\n\r\n                                    </div>\r\n                              )\r\n\r\n                              }\r\n\r\n                        }\r\n\r\n         \r\n               })\r\n\r\n\r\n\r\n         return <div className =\"container\" >\r\n            {NotesList}\r\n         </div>\r\n       }\r\n\r\n\r\n   export default GetNotes;\r\n\r\n   ","import React, { Component } from 'react';\nimport '../css/toolbox.css';\n\n\nclass Toolbox extends Component{\n    \n\n\n\n    render(){\n        return(\n            <div className=\"toolbox\">\n                 <ul>\n                      <li><textarea  id=\"searchBox\" type=\"text\" onChange = {this.props.searchNotes} placeholder=\"Type Something to Search\"></textarea></li>\n                      \n                      <li  onClick={this.props.clearSearchbox}> <i className=\"fas fa-times\" > </i> </li>\n                 </ul>\n               \n            </div>\n        )\n    }\n}\n\nexport default Toolbox;","import React, { Component } from 'react'\r\nimport '../src/css/style.css'\r\n// import JSON from './notes.json'\r\nimport GetNotes from './function'\r\nimport Toolbox from './page-componentss/toolbox';\r\n\r\nclass RenderNotes extends Component{\r\nstate = {\r\n    deletedOne:0,\r\n    searchText : ''\r\n    \r\n}\r\n\r\n\r\n\r\n\r\ndeleteMe = (id,title,note) => {\r\n    this.props.JSONnotes.map((item,index) => {\r\n        if(item.id === id && item.title === title && item.note === note){\r\n            this.props.JSONnotes.splice(index,1)\r\n        };\r\n        return this.setState({\r\n            deletedOne:index\r\n        })\r\n    })\r\n}\r\n\r\n// Handler for Search bOX\r\n\r\nsearchNotes = (event) => {\r\n\r\n   this.setState({\r\n       searchText:event.target.value\r\n   })\r\n}\r\n    \r\n\r\nclearSearchbox = () => {\r\n\r\n    document.getElementById(\"searchBox\").value = \"\"\r\n    this.setState({\r\n        searchText:'',\r\n    })\r\n    console.log(this.state.searchText)\r\n}\r\n\r\n    \r\n    render(){\r\n        return (          \r\n        <div>\r\n                <Toolbox clearSearchbox = {this.clearSearchbox}searchNotes = {this.searchNotes}{...this.props}/>\r\n                <GetNotes \r\n            editMe = {this.editMe} \r\n            deleteMe = {this.deleteMe} \r\n            searchText = {this.state.searchText}\r\n            {...this.props}/>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default RenderNotes;\r\n","import React, { Component } from 'react';\nimport RenderNotes from './savednotes';\n\nclass NewNote extends Component{\n    state = {\n        userinput:'',\n        titleInput:'',\n        status:'writing',\n     }\n     \n\n     // Title Change Event Handler\n     titleInputChange = (event) => {\n        this.setState({titleInput:event.target.value})\n     }\n\n     // Notes Typed Change handler\n     userInputChangeHandler = (event) => {\n        this.setState({userinput:event.target.value});\n     }\n   \n     // Save Button onClick Function\n\n     saveNote = () => { if (this.state.userinput !==''){\n         var length =\n         this.props.JSONnotes.length \n         var i = length + 1\n         this.props.JSONnotes.push( \n            { id : i,\n             title : this.state.titleInput,\n              note: this.state.userinput \n            } \n            ) \n            for (var j = 0;j <= length;j++) {\n               this.setState({\n                  userinput:'',\n                  titleInput:'',\n                  status:j }) \n            }\n           \n             this.clearNote() \n             this.updateNotes() } }\n     \n    // Clear Button onClick Function call\n     clearNote = () => {\n        document.getElementById('titleInputBox').value = '';\n        document.getElementById('userInputBox').value = '';\n     }\n     // Update JSON object as String\n     updateNotes = () => {\n      //   var finalJSON = JSON.stringify(this.props.JSONnotes);\n      //  console.log(this.props.JSONnotes);\n     }\n\n\n     // Edit note State Change\n     editNote = (id,title,note) => {\n      \n      document.getElementById('titleInputBox').value = `${title}`\n      document.getElementById('userInputBox').value = `${note}`;\n\n      this.setState({\n         userinput:`${title}`,\n         titleInput:`${note}`\n     })\n   }\n     \n     render(){\n         \n        return(\n            <div>\n                    <div className='card'>\n                            <div className = \"btn-Small\" onClick={this.clearNote}> + </div>\n                             <p className=\"heading-1\">Title</p>\n                            <textarea type=\"text\" id=\"titleInputBox\" onChange = {this.titleInputChange} className = \"titlebox\" placeholder = \"Give me a Name\"></textarea>\n            \n                            <p className=\"heading-2\">enWrite Here</p>\n                             <textarea type=\"text\" id=\"userInputBox\"onChange = {this.userInputChangeHandler} className =\"inputBox\" placeholder=\"What's On Your Mind\"></textarea>\n                         <div>\n                            <button className=\"button\" align=\"center\" onClick={this.saveNote}>Save</button>\n                             <button className='button' onClick={this.clearNote}>Clear</button>\n                         </div>\n                    </div>\n                    <br/>\n                    \n                     <RenderNotes \n                     editNote = {this.editNote}\n                     userinput = {this.state.userinput}\n                     JSONnotes={this.props.JSONnotes}\n                     {...this.props}/>\n                    \n            </div>\n        )\n     }\n    \n};\n\nexport default NewNote;","import React, { Component } from 'react';\r\nimport '../src/css/style.css'\r\n//import JSON from './notes.json'\r\n\r\nimport NewNote from './newnote'\r\n\r\n\r\nclass InputNote extends Component{\r\n\r\n\r\n   render(){\r\n      return (   \r\n         <div>\r\n            <NewNote {...this.props}/>        \r\n        </div> \r\n      )\r\n }\r\n}\r\n\r\nexport default InputNote;\r\n","import React, { Component } from 'react'\r\nimport '../css/header.css'\r\n\r\n\r\nclass Header extends Component{\r\n\r\n   openSidebar = () => {\r\n      if (this.props.sidebar === 'closed') {\r\n         return  this.props.sidebarUpdate('opened')\r\n      }\r\n   \r\n        else if (this.props.sidebar === 'opened'){\r\n         return this.props.sidebarUpdate('closed')\r\n     }\r\n}\r\n\r\n   render(){\r\n      return(\r\n         <div>\r\n                  <div className=\"navbar\">\r\n    \r\n                   <i className=\"fas fa-bars\" onClick ={ this.openSidebar}></i>\r\n                    <h1 className=\"main-title\" >enwrite</h1>\r\n\r\n                  <ul>\r\n                      <li><i className=\"fas fa-search\"></i></li>\r\n                      <li><i className=\"fas fa-user\"></i></li>\r\n                 </ul>\r\n\r\n            </div>\r\n         </div>\r\n  \r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport JSON from './notes.json'\r\nimport Sidebar from './page-componentss/sidebar';\r\n\r\n//Components\r\nimport InputNotes from './inputNote'\r\nimport Header from './page-componentss/header';\r\n\r\n\r\nclass App extends Component {\r\n   state = {\r\n      JSONnotes : JSON,\r\n      sidebar:'closed'\r\n   }\r\n\r\n// deletes All notes in the Array \r\n//Unused for now\r\n   // deleteAll = () => {\r\n   //       this.setState({\r\n   //          JSONnotes:[]\r\n   //       })\r\n   // }\r\n\r\n   sidebarUpdate = (value) => {\r\n      this.setState({\r\n         sidebar:value\r\n      })\r\n   }\r\n     \r\n   \r\n  \r\n   render(){\r\n      return (\r\n         <div>\r\n            <Header sidebar = {this.state.sidebar} sidebarUpdate = {this.sidebarUpdate}/>\r\n            <Sidebar sidebar = {this.state.sidebar} sidebarUpdate = {this.sidebarUpdate}/>\r\n            <InputNotes deleteAll = {this.deleteAll} JSONnotes={this.state.JSONnotes}/>\r\n         </div>\r\n         \r\n      )\r\n   }\r\n   }\r\n\r\n\r\n\r\nReactDOM.render(<App/>,document.querySelector('#root'))"],"sourceRoot":""}